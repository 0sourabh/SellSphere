{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\SellSphere\\\\reactapp\\\\src\\\\components\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n// Import the QR code image\nimport paymentQrImage from './Images/payment_qr.jpg'; // Adjust the path according to your file structure\nimport './PaymentPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentPage() {\n  _s();\n  const location = useLocation();\n  const {\n    product\n  } = location.state || {}; // Destructure the product from state\n\n  const [transactionId, setTransactionId] = useState('');\n  const [email, setEmail] = useState('');\n  const [message, setMessage] = useState('');\n  const handlePayment = () => {\n    // Mock payment processing logic\n    // Simulate a successful payment transaction\n    setMessage('Payment successful! Thank you for your purchase.');\n    // Here you would call your payment gateway API\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), product ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.pname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: Rs. \", product.price, \" /-\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: paymentQrImage,\n          alt: \"QR Code for payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please confirm your payment details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Transaction ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: transactionId,\n            onChange: e => setTransactionId(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Email Address:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePayment,\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No product selected for payment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentPage, \"zFoKa+Jqpnh6MvjO7gtlit7a34A=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useLocation","paymentQrImage","jsxDEV","_jsxDEV","PaymentPage","_s","location","product","state","transactionId","setTransactionId","email","setEmail","message","setMessage","handlePayment","children","fileName","_jsxFileName","lineNumber","columnNumber","pname","price","src","alt","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/projects/SellSphere/reactapp/src/components/PaymentPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n// Import the QR code image\r\nimport paymentQrImage from './Images/payment_qr.jpg'; // Adjust the path according to your file structure\r\nimport './PaymentPage.css';\r\n\r\nfunction PaymentPage() {\r\n    const location = useLocation();\r\n    const { product } = location.state || {}; // Destructure the product from state\r\n\r\n    const [transactionId, setTransactionId] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handlePayment = () => {\r\n        // Mock payment processing logic\r\n        // Simulate a successful payment transaction\r\n        setMessage('Payment successful! Thank you for your purchase.');\r\n        // Here you would call your payment gateway API\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Payment Options</h2>\r\n            {product ? (\r\n                <div>\r\n                    <h3>{product.pname}</h3>\r\n                    <p>Price: Rs. {product.price} /-</p>\r\n                    \r\n                    <div>\r\n                        <img src={paymentQrImage} alt=\"QR Code for payment\" />\r\n                        <p>Please confirm your payment details:</p>\r\n                        <label>\r\n                            Transaction ID:\r\n                            <input\r\n                                type=\"text\"\r\n                                value={transactionId}\r\n                                onChange={(e) => setTransactionId(e.target.value)}\r\n                            />\r\n                        </label>\r\n                        <br />\r\n                        <label>\r\n                            Email Address:\r\n                            <input\r\n                                type=\"email\"\r\n                                value={email}\r\n                                onChange={(e) => setEmail(e.target.value)}\r\n                            />\r\n                        </label>\r\n                        <br />\r\n                        <button onClick={handlePayment}>Pay Now</button>\r\n                    </div>\r\n                    {message && <p>{message}</p>}\r\n                </div>\r\n            ) : (\r\n                <p>No product selected for payment.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}