{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\SellSphere\\\\reactapp\\\\src\\\\components\\\\PaymentPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentPage() {\n  _s();\n  const location = useLocation();\n  const {\n    product\n  } = location.state || {}; // Destructure the product from state\n\n  const [message, setMessage] = useState('');\n  const handlePayment = () => {\n    // Mock payment processing logic\n    // Simulate a successful payment transaction\n    setMessage('Payment successful! Thank you for your purchase.');\n    // Here you would call your payment gateway API\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Payment Options\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), product ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: product.pname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Price: Rs. \", product.price, \" /-\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please confirm your payment details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Product Name: \", product.pname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Price: Rs. \", product.price, \" /-\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePayment,\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 21\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No product selected for payment.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentPage, \"q6OSWkJqOn9GaoptqImZxz5TRXY=\", false, function () {\n  return [useLocation];\n});\n_c = PaymentPage;\nexport default PaymentPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPage\");","map":{"version":3,"names":["React","useState","useLocation","jsxDEV","_jsxDEV","PaymentPage","_s","location","product","state","message","setMessage","handlePayment","children","fileName","_jsxFileName","lineNumber","columnNumber","pname","price","onClick","_c","$RefreshReg$"],"sources":["D:/projects/SellSphere/reactapp/src/components/PaymentPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nfunction PaymentPage() {\r\n    const location = useLocation();\r\n    const { product } = location.state || {}; // Destructure the product from state\r\n\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handlePayment = () => {\r\n        // Mock payment processing logic\r\n        // Simulate a successful payment transaction\r\n        setMessage('Payment successful! Thank you for your purchase.');\r\n        // Here you would call your payment gateway API\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Payment Options</h2>\r\n            {product ? (\r\n                <div>\r\n                    <h3>{product.pname}</h3>\r\n                    <p>Price: Rs. {product.price} /-</p>\r\n                    \r\n                    <div>\r\n                        <p>Please confirm your payment details:</p>\r\n                        <p>Product Name: {product.pname}</p>\r\n                        <p>Price: Rs. {product.price} /-</p>\r\n                        <button onClick={handlePayment}>Pay Now</button>\r\n                    </div>\r\n                    {message && <p>{message}</p>}\r\n                </div>\r\n            ) : (\r\n                <p>No product selected for payment.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PaymentPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEM;EAAQ,CAAC,GAAGD,QAAQ,CAACE,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC;;EAE1C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACxB;IACA;IACAD,UAAU,CAAC,kDAAkD,CAAC;IAC9D;EACJ,CAAC;EAED,oBACIP,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvBT,OAAO,gBACJJ,OAAA;MAAAS,QAAA,gBACIT,OAAA;QAAAS,QAAA,EAAKL,OAAO,CAACU;MAAK;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACxBb,OAAA;QAAAS,QAAA,GAAG,aAAW,EAACL,OAAO,CAACW,KAAK,EAAC,KAAG;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEpCb,OAAA;QAAAS,QAAA,gBACIT,OAAA;UAAAS,QAAA,EAAG;QAAoC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eAC3Cb,OAAA;UAAAS,QAAA,GAAG,gBAAc,EAACL,OAAO,CAACU,KAAK;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpCb,OAAA;UAAAS,QAAA,GAAG,aAAW,EAACL,OAAO,CAACW,KAAK,EAAC,KAAG;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACpCb,OAAA;UAAQgB,OAAO,EAAER,aAAc;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,EACLP,OAAO,iBAAIN,OAAA;QAAAS,QAAA,EAAIH;MAAO;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,gBAENb,OAAA;MAAAS,QAAA,EAAG;IAAgC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACzC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAACX,EAAA,CAlCQD,WAAW;EAAA,QACCH,WAAW;AAAA;AAAAmB,EAAA,GADvBhB,WAAW;AAoCpB,eAAeA,WAAW;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}